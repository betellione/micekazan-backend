services:
  api:
    user: root
    container_name: mice_kazan_api
    build:
      context: .
      dockerfile: WebApp1/Dockerfile
    ports:      
      - 8080:8080
    environment:
      - HTTP_PORTS=8080
    env_file: .env
    volumes:
      - api:/root/.aspnet/DataProtection-Keys
    depends_on:
      - db
  print:
    user: root
    container_name: mice_kazan_print
    build:
      context: .
      dockerfile: Micekazan.PrintDispatcher/Dockerfile
    ports:
      - 8081:8080
    environment:
      - HTTP_PORTS=8080
    env_file: .env
    volumes:
      - print:/root/.aspnet/DataProtection-Keys
    depends_on:
      - db
  db:
    container_name: mice_kazan_db
    image: postgres:15-alpine
    restart: always
    env_file: .env
    ports:
      - 6432:5432
    volumes:
      - db:/var/lib/postgresql/data
  elastic:
    container_name: mice_kazan_elastic
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    ports:
      - 9200:9200
    volumes:
      - elastic:/usr/share/elasticsearch/data
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - cluster.initial_master_nodes=es01
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits: 
      memlock:
        soft: -1
        hard: -1
    networks:
      - elastic
  kibana:
    container_name: mice_kazan_kibana
    image: docker.elastic.co/kibana/kibana:8.11.0
    ports:
      - 5601:5601
    depends_on:
      - elastic
    environment:
      - ELASTICSEARCH_URL=https://elastic:9200
      - ELASTICSEARCH_HOSTS=https://elastic:9200
    networks:
      - elastic
volumes:
  db:
    name: mice_kazan_db
  api:
    name: mice_kazan_api
  print:
    name: mice_kazan_print
  elastic:
    name: mice_kazan_elastic
networks:
  elastic:
    driver: bridge