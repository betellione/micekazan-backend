services:
  api:
    container_name: mice_kazan_api
    build:
      context: .
      dockerfile: WebApp1/Dockerfile
    ports:      
      - 8080:8080
    environment:
      - HTTP_PORTS=8080
    env_file: .env
    volumes:
      - api:/root/.aspnet/DataProtection-Keys
      - api_wwwroot:/app/wwwroot
    depends_on:
      - db
  print:
    container_name: mice_kazan_print
    build:
      context: .
      dockerfile: Micekazan.PrintDispatcher/Dockerfile
    ports:
      - 8081:8082
    environment:
      - HTTP_PORTS=8082
    env_file: print.env
    volumes:
      - print:/root/.aspnet/DataProtection-Keys
      - print_wwwroot:/app/wwwroot
    depends_on:
      - db
  db:
    container_name: mice_kazan_db
    image: postgres:16-alpine
    restart: always
    env_file: .env
    ports:
      - 6432:5432
    volumes:
      - db:/var/lib/postgresql/data
volumes:
  db:
    name: mice_kazan_db
  api:
    name: mice_kazan_api
  api_wwwroot:
      name: mice_kazan_api_wwwroot
  print:
    name: mice_kazan_print
  print_wwwroot:
    name: mice_kazan_print_wwwroot